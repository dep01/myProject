
create table verify_status(
id_verify_status int primary key,
verify_status varchar(15) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);

create table active_status(
id_active_status int primary key,
active_status varchar(15) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);

create table user_table(
id_user int AUTO_INCREMENT primary key,
username varchar (30) not null,
user_mail varchar(50) not null,
password varchar(30) not null,
verify_code int not null,
id_verify_status int ,
constraint fk_id_verify_status_user_table foreign key(id_verify_status) references verify_status(id_verify_status),
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null ,
constraint fk_id_active_status_user_table foreign key(id_active_status) references active_status(id_active_status)
);

create table gender_table(
id_gender int primary key,
gender varchar(10) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null ,constraint fk_id_active_status_gender_table foreign key(id_active_status) references active_status(id_active_status)
);

create table profile_table(
id_profile int AUTO_INCREMENT primary key,
id_user int not null ,constraint fk_id_user_profile_table foreign key (id_user) references user_table(id_user),
fullname varchar (50) not null,
birthday date not null,
id_gender int not null, constraint fk_id_gender_profile_table foreign key (id_gender) references gender_table(id_gender),
phone varchar(20) not null,
address varchar(1000) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null ,constraint fk_id_active_status_profile_table foreign key(id_active_status) references active_status(id_active_status)
);

create table status_user(
id_status_user int primary key,
status varchar(20) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null, constraint fk_id_active_status_status_user foreign key(id_active_status) references active_status(id_active_status)
);

create table jobbase_table(
id_user int not null,constraint fk_id_user_jobbase_table foreign key(id_user) references user_table(id_user),
id_jobbase int AUTO_INCREMENT primary key,
jobbase varchar(30) not null,
percentageFee int,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null, constraint fk_id_active_status_jobbase_table foreign key(id_active_status) references active_status(id_active_status)
);

create table project_status(
id_project_status int primary key,
project_status varchar(20) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null,constraint fk_id_active_status_project_status foreign key(id_active_status) references active_status(id_active_status)
);
create table job_status(
id_job_status int primary key,
job_status varchar(20) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null,constraint fk_id_active_status_job_status foreign key(id_active_status) references active_status(id_active_status)
);

create table project(
id_user int not null,constraint fk_id_user_project foreign key(id_user) references user_table(id_user),
id_project int AUTO_INCREMENT primary key,
project_name varchar(50) not null,
project_start date not null,
project_end date not null,
project_fee numeric(18,2) not null,
project_deadline int not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_project_status int not null ,constraint fk_id_project_status_project foreign key(id_project_status) references project_status(id_project_status)
);

create table project_detail(
id_project int not null,constraint fk_id_project_project_detail foreign key (id_project) references project(id_project),
id_user int not null, constraint fk_id_user_project_detail foreign key(id_user) references user_table(id_user),
id_jobbase int not null,constraint fk_id_jobbase_project_detail foreign key(id_jobbase) references jobbase_table (id_jobbase),
id_status_user int not null, constraint fk_id_status_user_project_detail foreign key (id_status_user) references status_user(id_status_user),
job_detail varchar(1000) not null,
start_job date not null,
finish_job date not null,
deadline_job int not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_job_status int not null,constraint fk_id_job_status_project_detail foreign key(id_job_status) references job_status(id_job_status)
);
CREATE TABLE list_friend_status(
id_list_friend_status int AUTO_INCREMENT PRIMARY key,
list_friend_status varchar(30) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null ,
constraint fk_id_active_status_list_friend_status foreign key(id_active_status) references active_status(id_active_status)
);
CREATE TABLE list_friend(
id_user int not null
,constraint fk_id_user_list_friend foreign key (id_user) references user_table(id_user),
id_user_friend int 
,constraint fk_id_user_friend_list_friend foreign key (id_user_friend) references user_table(id_user),
id_list_friend_status int not null, CONSTRAINT fk_id_list_friend_status_list_friend FOREIGN key (id_list_friend_status) REFERENCES list_friend_status(id_list_friend_status),
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE project_payment_status(
id_project_payment_status int AUTO_INCREMENT PRIMARY KEY,
project_payment_status varchar(30) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);
create TABLE project_payment(
id_project_payment int AUTO_INCREMENT PRIMARY KEY,
id_project int not null, CONSTRAINT fk_id_project_project_payment FOREIGN key(id_project) REFERENCES project(id_project),
invoice_document varchar(30) not null,
payment_amount numeric(18,2) not null,
payment_progress int NOT null,
project_progress int not null,
id_project_payment_status int not null, CONSTRAINT fk_id_project_payment_status_project_payment FOREIGN key(id_project_payment_status) REFERENCES project_payment_status(id_project_payment_status),
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);
create TABLE job_payment(
id_job_payment int AUTO_INCREMENT PRIMARY KEY,
id_project int not null, CONSTRAINT fk_id_project_job_payment FOREIGN key(id_project) REFERENCES project(id_project),
invoice_document varchar(30) not null,
id_user int not null, CONSTRAINT fk_id_user_job_payment FOREIGN key (id_user) REFERENCES user_table(id_user),
payment_amount numeric(18,2) not null,
payment_progress int NOT null,
job_progress int not null,
id_project_payment_status int not null, CONSTRAINT fk_id_project_payment_status_job_payment FOREIGN key(id_project_payment_status) REFERENCES project_payment_status(id_project_payment_status),
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP
);
---------2020-04-22-----------------------------New
create table project_team_status(
id_project_team_status int auto_increment not null primary key,
project_team_status varchar(15) not null,
created datetime default CURRENT_TIMESTAMP,
updated datetime default CURRENT_TIMESTAMP on UPDATE CURRENT_TIMESTAMP,
id_active_status int not null ,constraint fk_id_active_status_project_team_status foreign key(id_active_status) references active_status(id_active_status)
);
create table project_team(
id_project int not null ,
constraint fk_id_project_project_team foreign key (id_project) references project(id_project),
id_user int not null,
constraint fk_id_user_project_team foreign key (id_user) references user_table(id_user),
id_jobbase int not null,
constraint fk_id_jobbase_project_team foreign key (id_jobbase) references jobbase_table(id_jobbase),
percentageFee int not null,
fee decimal(18,2) not null,
id_project_team_status int not null
)